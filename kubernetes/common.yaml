apiVersion: v1
kind: Namespace
metadata:
  name: kmp

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kmp-pvc
  namespace: kmp
spec:
  storageClassName: "" # Empty string must be explicitly set otherwise default StorageClass will be set
  volumeName: kmp-pv
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
# create local volume
apiVersion: v1
kind: PersistentVolume
metadata:
  name: kmp-pv
  labels:
    type: local
spec:
  capacity:
    storage: 5Gi
  volumeMode: Filesystem # is mounted into Pods into a directory.
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/wsl/kube-data"
#  persistentVolumeReclaimPolicy: Recycle
  storageClassName: ""
#  mountOptions:
#    - hard
#    - nfsvers=4.1
#  nfs:
#    path: /tmp
#    server: 172.17.0.2

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: db-config
  namespace: kmp
data:
  posts-url: jdbc:postgresql://posts-db-service/kmp_posts
  users-url: jdbc:postgresql://users-db-service/kmp_users

---

apiVersion: v1
kind: Secret
metadata:
  name: db-secret
  namespace: kmp
type: Opaque
data:
  # You can include additional key value pairs as you do with Opaque Secrets
  extra: YmFyCg==
  db-users-user: a21wX3VzZXJz
  db-users-password: a21wX3VzZXJz
  db-users-name: a21wX3VzZXJz
  db-posts-user: a21wX3Bvc3Rz
  db-posts-password: a21wX3Bvc3Rz
  db-posts-name: a21wX3Bvc3Rz

---
#posts services
apiVersion: apps/v1
kind: Deployment
metadata:
  name: posts-db-deployment
  namespace: kmp
  labels:
    app.kubernetes.io/name: posts-db
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: posts-db
  template:
    metadata:
      labels:
        app.kubernetes.io/name: posts-db
    spec:
      containers:
        - name: posts-db
          image: postgres
          ports:
            - containerPort: 5432
              name: posts-db
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: db-posts-user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: db-posts-password
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: db-posts-name
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: posts-vol
      volumes:
        - name: posts-vol
          persistentVolumeClaim:
            claimName: kmp-pvc

---

apiVersion: v1
kind: Service
metadata:
  name: posts-db-service
  namespace: kmp
spec:
  clusterIP: None
  selector:
    app.kubernetes.io/name: posts-db
#  type: NodePort
  ports:
    - protocol: TCP
      port: 5432
#      targetPort: posts-db
#      nodePort: 30433

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: posts-deployment
  namespace: kmp
  labels:
    app.kubernetes.io/name: posts
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: posts
  template:
    metadata:
      labels:
        app.kubernetes.io/name: posts
    spec:
      containers:
        - name: posts
          image: epamsesegvanchikova/posts:v2
          ports:
            - containerPort: 8080
              name: http-posts
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: db-posts-user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: db-posts-password
            - name: DATABASE_URL
              valueFrom:
                configMapKeyRef:
                  name: db-config
                  key: posts-url
---

apiVersion: v1
kind: Service
metadata:
  name: posts
  namespace: kmp
spec:
  selector:
    app.kubernetes.io/name: posts
  type: NodePort
  ports:
    - protocol: TCP
      port: 80
      targetPort: http-posts
      nodePort: 30890

---
#users services
apiVersion: apps/v1
kind: Deployment
metadata:
  name: users-db-deployment
  namespace: kmp
  labels:
    app.kubernetes.io/name: users-db
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: users-db
  template:
    metadata:
      labels:
        app.kubernetes.io/name: users-db
    spec:
      containers:
        - name: users-db
          image: postgres
          ports:
            - containerPort: 5432
              name: users-db
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: db-users-user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: db-users-password
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: db-users-name
#  volumes:
#    - name: posts-vol

---

apiVersion: v1
kind: Service
metadata:
  name: users-db-service
  namespace: kmp
spec:
  clusterIP: None
  selector:
    app.kubernetes.io/name: users-db
#  type: NodePort
  ports:
    - protocol: TCP
      port: 5432
#      targetPort: posts-db
#      nodePort: 30432

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: users-deployment
  namespace: kmp
  labels:
    app.kubernetes.io/name: users
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: users
  template:
    metadata:
      labels:
        app.kubernetes.io/name: users
    spec:
      containers:
        - name: posts
          image: epamsesegvanchikova/users:v2
          ports:
            - containerPort: 8080
              name: http-users
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: db-users-user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: db-users-password
            - name: DATABASE_URL
              valueFrom:
                configMapKeyRef:
                  name: db-config
                  key: users-url
---

apiVersion: v1
kind: Service
metadata:
  name: users
  namespace: kmp
spec:
  selector:
    app.kubernetes.io/name: users
  type: NodePort
  ports:
    - protocol: TCP
      port: 80
      targetPort: http-users
      nodePort: 30880
